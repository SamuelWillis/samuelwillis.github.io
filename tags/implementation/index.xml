<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Implementation on samuel willis</title><link>https://www.samuelwillis.dev/tags/implementation/</link><description>Recent content in Implementation on samuel willis</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Apr 2021 15:12:45 -0600</lastBuildDate><atom:link href="https://www.samuelwillis.dev/tags/implementation/index.xml" rel="self" type="application/rss+xml"/><item><title>Stacks in Elixir</title><link>https://www.samuelwillis.dev/posts/stacks-in-elixir/</link><pubDate>Sun, 11 Apr 2021 15:12:45 -0600</pubDate><guid>https://www.samuelwillis.dev/posts/stacks-in-elixir/</guid><description>Stacks are one of the most basic data structures in Computer Science. Nonetheless, they are quite useful and used often.
They operate under the Last In First Out (LIFO) policy, meaning the last object placed onto the stack is the first one to be removed from it.
In Elixir they are essentially syntactical sugar for Lists but implementing them was a nice way to get acquainted with Structs and basic pattern matching.</description></item></channel></rss>