<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ContiguousSum on samuel willis</title><link>https://www.samuelwillis.dev/tags/contiguoussum/</link><description>Recent content in ContiguousSum on samuel willis</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 May 2021 21:00:50 -0600</lastBuildDate><atom:link href="https://www.samuelwillis.dev/tags/contiguoussum/index.xml" rel="self" type="application/rss+xml"/><item><title>Max Subarray in Elixir</title><link>https://www.samuelwillis.dev/posts/max-contiguous-sum-in-elixir/</link><pubDate>Thu, 20 May 2021 21:00:50 -0600</pubDate><guid>https://www.samuelwillis.dev/posts/max-contiguous-sum-in-elixir/</guid><description>The maximum subarray problem is defined as follows:
Given an array A find a nonempty, contiguous subarray of A whose values have the largest sum.
It&amp;rsquo;s an interesting little problem that benefits greatly from the use of a divide and conquer algorithm as the runtime goes from O(n^2) for the brute force method to O(nlog(n)) for the divide and conquer method.
Brute Force Method The brute force method is quite simple.</description></item></channel></rss>